stages:
  - build
  - deploy

build:
  stage: build
  image: 
    name: maven:3.8.5-openjdk-17
  script: mvn clean install
  artifacts:
    paths:
      - target/spring-gitlab-ci*

production:
  stage: deploy
  image: 
    name: docker:20.10.16 
  variables:
    # using "docker" as the host is only possible if you alias the service below
    DOCKER_HOST: tcp://docker:2375 
    # could be wrong here but although Docker defaults to overlay2, 
    # Docker-in-Docker (DIND) does not according to the following GitLab doc: 
    # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-the-overlayfs-driver
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    APP_IMAGE: demo-cicd-image  
  services:
    - name: docker:20.10.16-dind
      alias: docker
      # in our experience although you'd assume this would be sufficient, this did 
      # nothing to prevent connection errors without `DOCKER_TLS_CERTDIR` being set 
      # to an empty string, and I would call that beyond mildly infuriating.
      command: ["--tls=false"]
  script:
  - docker build -t $APP_IMAGE .
  - docker run -d -p 8090:8080 $APP_IMAGE /script/to/run/tests
  only:
  - main

after_script:
  - echo "End CI/CD Process"
